/*
문제21) 가위 바위 보
가위는 2 바위는 0 보는 5로 표현합니다. 가위 바위 보를 내는 순서대로 나타낸 문자열 rsp가 매개변수로 주어질 때, 
rsp에 저장된 가위 바위 보를 모두 이기는 경우를 순서대로 나타낸 문자열을 return하도록 solution 함수를 완성해보세요.

* 제한사항 *
0 < rsp의 길이 ≤ 100
rsp와 길이가 같은 문자열을 return 합니다.
rsp는 숫자 0, 2, 5로 이루어져 있습니다.
*/

function solution(rsp) {
    var answer = '';
    var r = '0';
    var s = '2';
    var p = '5';
    
    for(var i = 0; i < rsp.length ; i++) {

       if(rsp[i] === r) {
           answer += p;
       } else if(rsp[i] === s) {
           answer += r;
       } else {
           answer += s;
       }

    }
    
    return answer;
}

/*
문제22) 숨어있는 숫자의 덧셈(1)
문자열 my_string이 매개변수로 주어집니다. my_string안의 모든 자연수들의 합을 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ my_string의 길이 ≤ 1,000
my_string은 소문자, 대문자 그리고 한자리 자연수로만 구성되어있습니다.
*/

function solution(my_string) {
    let answer = 0;
    
   my_string = my_string.replaceAll(/[A-Za-z]/g,'');

   for(let i=0; i < my_string.length; i++){
        answer += Number(my_string[i]);
   }
    return answer;
}

/*
문제23) 암호해독
군 전략가 머쓱이는 전쟁 중 적군이 다음과 같은 암호 체계를 사용한다는 것을 알아냈습니다.
  # 암호화된 문자열 cipher를 주고받습니다.
  # 그 문자열에서 code의 배수 번째 글자만 진짜 암호입니다.
문자열 cipher와 정수 code가 매개변수로 주어질 때 해독된 암호 문자열을 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ cipher의 길이 ≤ 1,000
1 ≤ code ≤ cipher의 길이
cipher는 소문자와 공백으로만 구성되어 있습니다.
공백도 하나의 문자로 취급합니다.
*/

function solution(cipher, code) {
    var answer = '';

    for ( var i = code-1; i < cipher.length; i += code) {
        answer += cipher[i];
    }

    return answer;
}

/*
문제24) 대문자와 소문자
문자열 my_string이 매개변수로 주어질 때, 대문자는 소문자로 소문자는 대문자로 변환한 문자열을 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ my_string의 길이 ≤ 1,000
my_string은 영어 대문자와 소문자로만 구성되어 있습니다.
*/

function solution(my_string) {
    var answer = '';
    
    for (var i = 0; i < my_string.length; i++) {
        if(/[A-Z]/.test(my_string[i]) == true ) {
            answer += my_string[i].toLowerCase();
        } else { 
            answer += my_string[i].toUpperCase();
        }
    } 
    
    return answer;
}

/*
문제25) n의 배수 고르기
정수 n과 정수 배열 numlist가 매개변수로 주어질 때, 
numlist에서 n의 배수가 아닌 수들을 제거한 배열을 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ n ≤ 10,000
1 ≤ numlist의 크기 ≤ 100
1 ≤ numlist의 원소 ≤ 100,000
*/

function solution(n, numlist) {
    var answer = [];
    var i = 0;    

    for (var i = 0; i <= numlist.length; i++){
        if(numlist[i] % n == 0) {
            answer.push(numlist[i]);
        }
    }  
    
    return answer;
}

/*
문제26) 순서쌍의 개수
순서쌍이란 두 개의 숫자를 순서를 정하여 짝지어 나타낸 쌍으로 (a, b)로 표기합니다. 
자연수 n이 매개변수로 주어질 때 두 숫자의 곱이 n인 자연수 순서쌍의 개수를 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ n ≤ 1,000,000
*/

function solution(n) {
    var answer = 0;
    
    for(let i = 1; i <= n; i++){
      if(n%i == 0) answer++;
    }
    
    return answer;
}

/*
문제27) 배열 두 배 만들기
정수 배열 numbers가 매개변수로 주어집니다. 
numbers의 각 원소에 두배한 원소를 가진 배열을 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
-10,000 ≤ numbers의 원소 ≤ 10,000
1 ≤ numbers의 길이 ≤ 1,000
*/

function solution(numbers) {
    var answer = [];
    
    for(var i = 0; i < numbers.length; i++) {
        answer[i] = numbers[i] * 2;
    }
    
    return answer;
}

/*
문제28) 점의 위치 구하기
사분면은 한 평면을 x축과 y축을 기준으로 나눈 네 부분입니다. 사분면은 아래와 같이 1부터 4까지 번호를매깁니다.

x 좌표와 y 좌표가 모두 양수이면 제1사분면에 속합니다. (우상단)
x 좌표가 음수, y 좌표가 양수이면 제2사분면에 속합니다. (좌상단)
x 좌표와 y 좌표가 모두 음수이면 제3사분면에 속합니다. (좌하단)
x 좌표가 양수, y 좌표가 음수이면 제4사분면에 속합니다. (우하단)

x 좌표 (x, y)를 차례대로 담은 정수 배열 dot이 매개변수로 주어집니다. 
좌표 dot이 사분면 중 어디에 속하는지 1, 2, 3, 4 중 하나를 return 하도록 solution 함수를 완성해주세요.

* 제한사항 *
dot의 길이 = 2
dot[0]은 x좌표를, dot[1]은 y좌표를 나타냅니다
-500 ≤ dot의 원소 ≤ 500
dot의 원소는 0이 아닙니다.
*/

function solution(dot) {
    
    if(dot[0] > 0 && dot[1] > 0) {
       return 1;
    } else if(dot[0] < 0 && dot[1] > 0) {
       return 2;
    } else if(dot[0] < 0 && dot[1] < 0) {
       return 3;
    } else if(dot[0] > 0 && dot[1] < 0) {
       return 4;
    }

 }

/*
문제29) 배열의 유사도
두 배열이 얼마나 유사한지 확인해보려고 합니다. 
문자열 배열 s1과 s2가 주어질 때 같은 원소의 개수를 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
1 ≤ s1, s2의 길이 ≤ 100
1 ≤ s1, s2의 원소의 길이 ≤ 10
s1과 s2의 원소는 알파벳 소문자로만 이루어져 있습니다
s1과 s2는 각각 중복된 원소를 갖지 않습니다.
*/

function solution(s1, s2) {
    var answer = 0;
    
    for(let i = 0; i < s2.length; i++) {
        for(let j = 0; j < s1.length; j++) {
            if( s2[i] == s1[j] ) {
                answer++;
            }
        }
    }

    return answer;
}

/*
문제30) 삼각형의 완성조건(1)
선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다.

# 가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다.
# 삼각형의 세 변의 길이가 담긴 배열 sides이 매개변수로 주어집니다. 
# 세 변으로 삼각형을 만들 수 있다면 1, 만들 수 없다면 2를 return하도록 solution 함수를 완성해주세요.

* 제한사항 *
sides의 원소는 자연수입니다.
sides의 길이는 3입니다.
1 ≤ sides의 원소 ≤ 1,000
*/

function solution(sides) {
    var answer = 0;
    
    sides.sort();
    answer = sides[0] + sides[1] > sides[2] ? 1 : 2;
    
    return answer;
}